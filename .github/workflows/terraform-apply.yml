name: Deploy to EC2
on:
  workflow_run:
    workflows: ["Python Tests"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy_infra:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
          
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
         
      - name: Terraform Apply
        id: terraform
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve
          echo "instance_ip=$(terraform output -raw instance_public_ip)"
          echo "PRIVATE_KEY=$(terraform output -raw private_key)"
        
      - name: Save Private Key
        run: |
          cd terraform
          terraform output -raw private_key > private_key.pem
          chmod 600 private_key.pem
          cp private_key.pem ../
        
      - name: Wait for instance to be ready
        run: |
         ls
         sleep 10 
        
      - name: Deploy application
        run: |
          cd terraform
          # Define the instance IP address as a variable
          instance_ip=$(terraform output -raw instance_public_ip)
          echo 
          
          # Verify that the instance_ip is set correctly
          echo "Deploying to $instance_ip"
          
          # Use the instance_ip for SCP and SSH commands
          scp -i private_key.pem -o StrictHostKeyChecking=no -r ../* ubuntu@$instance_ip:/home/ubuntu/app
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$instance_ip '
            cd /home/ubuntu/app
            sudo apt-get update
            sudo apt-get install -y python3-pip
            pip3 install -r requirements.txt
            # Run the application in the background
            nohup python3 app.py > app.log 2>&1 & 
          '
